"""Provides logic-related functionality"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_logic.ipynb.

# %% auto 0
__all__ = ['get_up', 'get_down', 'get_left', 'get_right', 'get_neighbors', 'get_all_neighbors']

# %% ../nbs/02_logic.ipynb 3
import numpy as np

# %% ../nbs/02_logic.ipynb 4
def get_up(array: np.ndarray, pos: tuple[int, int]) -> int | None:
    """Get the value above a given position in the array."""
    x, y = pos
    if x > 0:
        return array[x-1, y]
    else:
        return None
    
def get_down(array: np.ndarray, pos: tuple[int, int]) -> int | None:
    """Get the value below a given position in the array."""
    x, y = pos
    if x < array.shape[0] - 1:
        return array[x+1, y]
    else:
        return None
    
def get_left(array: np.ndarray, pos: tuple[int, int]) -> int | None:
    """Get the value to the left of a given position in the array."""
    x, y = pos
    if y > 0:
        return array[x, y-1]
    else:
        return None
    
def get_right(array: np.ndarray, pos: tuple[int, int]) -> int | None:
    """Get the value to the right of a given position in the array."""
    x, y = pos
    if y < array.shape[1] - 1:
        return array[x, y+1]
    else:
        return None
    
def get_neighbors(array: np.ndarray, pos: tuple[int, int]) -> list[int]:
    """Get the values of all 4 neighboring positions (up, down, left, right) in the array."""
    neighbors = []
    for get in [get_up, get_down, get_left, get_right]:
        val = get(array, pos)
        if val is not None:
            neighbors.append(val)
    return neighbors

def get_all_neighbors(array: np.ndarray, pos: tuple[int, int]) -> list[int]:
    """Get the values of all 8 neighboring positions in the array."""
    neighbors = []
    x, y = pos
    for i in range(-1, 2):
        for j in range(-1, 2):
            if i == 0 and j == 0:
                continue
            nx, ny = x + i, y + j
            if 0 <= nx < array.shape[0] and 0 <= ny < array.shape[1]:
                neighbors.append(array[nx, ny])
    return neighbors
